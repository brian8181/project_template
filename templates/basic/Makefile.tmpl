# MAKE_TEMPLATE = 0.l.2
# BUILD_VERSION = 0.l.2

prefix = /usr/local
mandir = $(prefix)/share/man
man1dir = $(mandir)/man1

# Compiler settings - Can be customized.
CXX = g++
CXXFLAGS = -Wall -std=c++17 -DDEBUG -ggdb
# CXXFLAGS = -Wall -std=c++17

# lib settings
LDFLAGS = -static -lcppunit -L/usr/local/lib/
INCLUDES = -I/usr/local/include/cppunit/
# add addtional libs here

# Makefile settings - Can be customized.
APPNAME = @@APP_NAME@@
EXT = cpp
ROOTDIR  = .
BUILD = ./build
OBJ = ./build
SRC = ./src

# compile & link for debug
debug: all

# compile & link for debug GDBversion variable
all: $(APPNAME)

# link
$(APPNAME): $(APPNAME).o main.o #@@PREREQUISTE@@
	 $(CXX) $(CXXFLAGS) -o $(BUILD)/$(APPNAME) $(BUILD)/$(APPNAME).o $(BUILD)/main.o #@@CLASS_NAME@@

# compile only
$(APPNAME).o:
	$(CXX) $(CXXFLAGS) -c $(SRC)/$(APPNAME).$(EXT) -o $(BUILD)/$(APPNAME).o
	
main.o:
	$(CXX) $(CXXFLAGS) -c $(SRC)/main.$(EXT) -o $(BUILD)/main.o

#AUTO_INSERT_POINT_DO_NOT_REMOVE#

# install man pages
.PHONY: man
man:
	cp ../man/$(APPNAME).1 $(man1dir)
	# gzip $(man1dir)/$(APPNAME).1
	mandb

.PHONY: unman
unman:
	-rm -rf $(man1dir)/$(APPNAME).1.gz
	mandb

# install 
.PHONY: install
install: man
	cp $(BUILD)/$(APPNAME) $(prefix)/bin/$(APPNAME)
	rm $(prefix)/bin/$(APPNAME)

# delete object files & app executable
.PHONY: clean
clean:
	-rm -rf $(OBJ)/*.
	-rm -f $(BUILD)/*
	
# delete object files, app, executables, & all automake/autoconf generated files
.PHONY: distclean
distclean: clean
	
dist: 
	git archive HEAD | gzip > $(BUILD)/$(APPNAME).$(BUILD_VERSION).tar.gz

dist-gz: dist
